FORMAT: 1A
HOST: http://www.google.com

# DAP Services a.s. API, version 2

API verze 2. Opřeno o model3.

##Allowed HTTPs requests:

- `POST` - Creates or updates a resource
- `PUT` - Updates a resource
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource

##Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 instead).
- 201 `Created` - The request was successful and a resource was created.
- 204 `No Content` - The request was successful but there is no representation to return (that is, the response is empty).
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 401 `Unauthorized` - Authentication failed or user does not have permissions for the requested operation.
- 403 `Forbidden` - Access denied.
- 404 `Not Found` - Resource was not found.
- 405 `Method Not Allowed` - Requested method is not supported for the specified resource.
- 429 `Too Many Requests` - Exceeded API limits. Pause requests, wait one minute, and try again.
- 503 `Service Unavailable` - The service is temporary unavailable. Try again later.

# API root [/]

Bez atributů, vrací `403`.

## Požadavek na root [GET]

+ Response 403

# Group Account

Práce s účtem uživatele.

# Přihlašování do API [/account/login]

Autentizace. Všechny http metody kromě **POST** vrací http status code `405`.

## POST

Přihlašování.

Seznam json atributů:

- username (required, string) - uživatelské jméno
- password (required, string) - heslo
- app_id (required, string) - id aplikace, do které se uživatel přihlašuje.

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "username": "user@yourdomain.com",
                "password": "good_password",
                "app_id": "APPID"
            }

    + Schema

            {
                "type": "object",
                "required": true,
                "properties": {
                    "username": {
                        "type": "string",
                        "required": true
                    },
                    "password": {
                        "type": "string",
                        "required": true
                    },
                    "app_id": {
                        "type": "string",
                        "required": true
                    }
                }
            }

+ Response 200 (application/json)
    + Headers

            Access-Control-Allow-Origin: *

    + Body

            {
                "user_id": 12312334,
                "profile": "/account/profile/{user_id}",
                "token": "security_token"
            }

+ Response 401 (application/json)
    + Headers

            Access-Control-Allow-Origin: *

    + Body

            {
                "error": {
                    "message": "Chybové hlášení pro autentizaci.",
                    "error_code": "error.code.login.badUserName"
                }
            }

# Registrace uživatele [/account/registration]

Registrace uživatele. Výsledkem je user_id a url pro přístup k profilu uživatele.

> TODO Pravděpodobně samostatný resource - specifická emailová fčnost (confirmation flow)

## POST

Operace pro vytvoření uživatele.

200 se vrací v případě korektního http požadavku - nejsou ale splněny požadavky na vstupní json (validace vstupu).

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "first_name": "first_name",
                "last_name": "last_name",
                "company_name": "company_name",
                "email": "email",
				"address": "address",
                "country_code": "ISO country code",
                "language_code": "ISO language code",
                "phone_number": "phone_number",
                "login": "login_name",
                "password": "PASSWORD",
                "verify_password": "PASSWORD",
                "vat_number": "vat_number"
            }


+ Response 200 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "user_id": 12312334,
                "profile": "/account/profile/{user_id}"
            }

+ Response 400 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "error": {
                    "message": "Chybové hlášení pro vytvoření uživatele.",
                    "error_code": "error.code.registration"
                }
            }


# Potvrzení registrace uživatele [/account/registrationconfirm]

Potvrzení registrace uživatele. Posílá se klíč, který uživatel dostal (pravděpodobně do emailu v potvrzovacím linku). V případě, že požadavek není validní - neexistující klíč, uživatel je již aktivovaný se vrací error json.

> TODO Pravděpodobně samostatný resource pro app

## POST

Potvrzení registrace.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "key": "confirmation_key"
            }

+ Response 200 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "user_id": 12312334,
                "profile": "/account/profile/{user_id}"
            }

+ Response 400 (application/json)

    + Headers

            Accept: application/json
            Content-language: er

    + Body

            {
                "error": {
                    "message": "Chybové hlášení pro potvrzení registrace uživatele.",
                    "error_code": "error.code.registration.confirm"
                }
            }
			


# Operace pro zobrazení uživatele. [/account/{user_id}]
 
## GET
 
+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "user_id": 12312334   
            }


+ Response 200 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "first_name": "first_name",
                "last_name": "last_name",
                "company_name": "company_name",
                "email": "email",
                "address": "address",
                "country_code": "ISO country code",
                "language_code": "ISO language code",
                "phone_number": "phone_number",
                "login": "login_name",
                "vat_number": "vat_number",
                "licence_start": "date_number",
                "licence_end": "date_number"
            }

+ Response 400 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "error": {
                    "message": "Chybové hlášení pro zobrazení uživatele.",
                    "error_code": "error.code.registration"
                }
            } 
 	
# Seznam školení uživatele [/account/{user_id}/trainings]

Práce se školeními uživatele. Autorizovaný resource.

> TODO Pravděpodobně samostatný resource pro app

## GET

Seznam školení uživatele.

+ Response 200 (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "trainings": [
                    {
                        "id": 1,
                        "name": "nls.training.name.key",
                        "status": "NOT_ORDERED | ORDERED"
                    },
                    {
                        "id": 2,
                        "name": "nls.training.name.key",
                        "status": "NOT_ORDERED | ORDERED"
                    }
                ]
            }

## POST

Objednání školení uživatele. Výsledkem je odeslání emailu administrátorovi s žádostí o školení.

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
                "training_ids": [1, 3, 8]
            }

+ Response 204

## Languages Collection [/language]
### List all Languages [GET]
+ Response 200 (application/json)

    + Header
    
            Accept: application/json
            
    + Body

            [{
                "name": "EN",
                "id": 1
            }, {
                "name": "DE",
                "id": 2
            }, {
                "name": "CZE",
                "id": 3
            }]
            
## Countries Collection [/country]
### List all Countries [GET]
+ Response 200 (application/json)

    + Header
    
            Accept: application/json
            
    + Body

            [{
                "name": "USA",
                "id": 1
            },{
                "name": "Canada",
                "id": 2
            }]